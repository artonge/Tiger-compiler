###
/* declaration d'entier simple */
let
	var i := 1
in
	printi(i)
end
###
/* declarations d'entier avec reutilisation de 2 autres entiers */

let
	var j := 1
	var k := 1
	var i := j+k
in
	printi(i)
end
###
/* declarations d'entier avec reutilisation de 3 autres entiers */

let
	var j := 1
	var k := 1
	var l := 1
	var i := j+k+l
in
	printi(i)
end
###
/* declaration simple d'entier avec type */

let
	var i : int := 1
in
	printi(i)
end
###
/* declarations d'entier avec types et reutilisation de 2 autres entiers */

let
	var j : int := 1
	var k : int := 1
	var i : int := j+k
in
	printi(i)
end
###
/* declarations d'entier avec types et reutilisation de 3 autres entiers */

let
	var j : int := 1
	var k : int := 1
	var l : int := 1
	var i : int := j+k+l
in
	printi(i)
end
###
/* declaration de chaine simple */

let
	var s := "s"
in
	print(s)
end
###
/* declarations de chaine avec reutilisation de 2 autres chaines */

let
	var t := "test"
	var u := "test"
	var s := t+u
in
	print(s)
end
###
/* declarations de chaine avec reutilisation de 3 autres chaines */

let
	var t := "test"
	var u := "test"
	var v := "test"
	var s := t+u+v
in
	print(s)
end
###
/* declaration de chaine avec type */

let
	var s : string := "test"
in
	print(s)
end
###
/* declarations de chaine avec types et reutilisation de 2 autres chaines */

let
	var t : string := "test"
	var u : string := "test"
	var s : string := t+u
in
	print(s)
end
###
/* declarations de chaine avec types et reutilisation de 3 autres chaines */

let
	var t : string := "test"
	var u : string := "test"
	var v : string := "test"
	var s : string := t+u+v
in
	print(s)
end